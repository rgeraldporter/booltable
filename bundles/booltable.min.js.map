{"version":3,"sources":["webpack://BoolTable/webpack/universalModuleDefinition","webpack://BoolTable/webpack/bootstrap","webpack://BoolTable/./src/index.ts","webpack://BoolTable/./node_modules/simple-maybe/src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","simple_maybe_1","truthOr","x","Array","isArray","length","some","a","truthAnd","every","truthXor","Set","size","truthNor","Truth","map","f","chain","ap","y","inspect","join","concat","head","tail","isEmpty","Boolean","or","and","nor","xor","forkOr","g","forkOrL","noop","forkOrR","forkAnd","forkAndL","forkAndR","forkXor","forkXorL","forkXorR","forkNor","forkNorL","forkNorR","exportTruth","of","console","error","truthTypeError","xFnTableFirst","Maybe","find","xFnTableLast","slice","reverse","xFnTableAny","filter","z","xTableFirst","xTableLast","xTableAny","decide","finder","xFnTableN","isFinite","xTableN","fork","Decision","run","exportDecision","decisionTypeError","queryBTFn","findIfCond","pop","_","warn","BoolTable","q","query","exportBoolTable","boolTableTypeError","Just","isJust","isNothing","sequence","Nothing","undefined"],"mappings":"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","file":"booltable.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"BoolTable\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BoolTable\"] = factory();\n\telse\n\t\troot[\"BoolTable\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {\n    TruthMonad,\n    Monad,\n    TupleConditionalFnTable,\n    TupleConditionalTable,\n    TupleConditionalFnTableRow,\n    TupleConditionalTableRow,\n    DecisionTable,\n    DecisionMonad,\n    ConditionalRow,\n    DecisionMonadConstructor,\n    TruthMonadConstructor,\n    RunType,\n    BoolTable,\n    BoolTableMonad,\n    TupleBoolTableRow,\n    BoolTableMonadConstructor\n} from './types';\n\nimport { Maybe } from 'simple-maybe';\n\nconst noop = () => {};\n\nconst truthOr = (x: Array<boolean>): boolean =>\n    Array.isArray(x) && x.length ? x.some((a: boolean) => a) : false;\n\nconst truthAnd = (x: Array<boolean>): boolean =>\n    Array.isArray(x) && x.length ? x.every((a: boolean) => a) : false;\n\nconst truthXor = (x: Array<boolean>): boolean =>\n    Array.isArray(x) && x.length ? new Set(x).size > 1 : false;\n\nconst truthNor = (x: Array<boolean>): boolean =>\n    Array.isArray(x) && x.length ? x.every((a: boolean) => !a) : false;\n\nconst Truth = (x: Array<boolean>): TruthMonad => ({\n    map: (f: Function): TruthMonad => Truth(f(x)),\n    chain: (f: Function): any => f(x),\n    ap: (y: Monad): Monad => y.map(x),\n    inspect: (): string => `Truth(${x})`,\n    join: (): boolean | Array<boolean> => x,\n    concat: (o: TruthMonad): TruthMonad =>\n        o.chain((r: any): TruthMonad => Truth((x as Array<boolean>).concat(r))),\n    head: (): boolean | Array<boolean> =>\n        Array.isArray(x) && x.length ? x[0] : [],\n    tail: (): boolean | Array<boolean> =>\n        Array.isArray(x) && x.length ? x[x.length - 1] : [],\n    isEmpty: (): Boolean => Boolean(!Array.isArray(x) || x.length === 0),\n    or: (): boolean => truthOr(x),\n    and: (): boolean => truthAnd(x),\n    nor: (): boolean => truthNor(x),\n    xor: (): boolean => truthXor(x),\n    forkOr: (f: Function, g: Function): any => (truthOr(x) ? g() : f()),\n    forkOrL: (f: Function): any => (truthOr(x) ? noop() : f() ),\n    forkOrR: (f: Function): any => (truthOr(x) ? f() : noop() ),\n    forkAnd: (f: Function, g: Function): any => (truthAnd(x) ? g() : f()),\n    forkAndL: (f: Function): any => (truthAnd(x) ? noop() : f()),\n    forkAndR: (f: Function): any => (truthAnd(x) ? f() : noop()),\n    forkXor: (f: Function, g: Function): any => (truthXor(x) ? g() : f()),\n    forkXorL: (f: Function): any => (truthXor(x) ? noop() : f()),\n    forkXorR: (f: Function): any => (truthXor(x) ? f() : noop()),\n    forkNor: (f: Function, g: Function): any => (truthNor(x) ? g() : f()),\n    forkNorL: (f: Function): any => (truthNor(x) ? noop() : f()),\n    forkNorR: (f: Function): any => (truthNor(x) ? f() : noop())\n});\n\nconst truthTypeError = (x: any): TruthMonad => {\n    console.error(\n        'Decision must be passed parameters that adhere to the documented type. Value that was passed:',\n        x\n    );\n    return Truth([false]);\n};\n\n// @todo make much stricter; more of a sniff test right now\nconst TruthOf = (x: Array<boolean>): TruthMonad =>\n    Array.isArray(x) ? Truth(x) : truthTypeError(x);\n\nconst exportTruth: TruthMonadConstructor = {\n    of: TruthOf\n};\n\nconst xFnTableFirst = (x: TupleConditionalFnTable): Monad =>\n    Maybe.of(x.find((y: TupleConditionalFnTableRow) => y[0])).map(\n        (y: TupleConditionalFnTableRow) => y[1](y[2])\n    );\n\nconst xFnTableLast = (x: TupleConditionalFnTable): Monad =>\n    Maybe.of(\n        x\n            .slice()\n            .reverse()\n            .find((y: TupleConditionalFnTableRow) => y[0])\n    ).map((y: TupleConditionalFnTableRow) => y[1](y[2]));\n\nconst xFnTableAny = (x: TupleConditionalFnTable): Monad =>\n    Maybe.of(x.filter((y: TupleConditionalFnTableRow) => y[0])).map(\n        (y: TupleConditionalFnTable) =>\n            y.map((z: TupleConditionalFnTableRow) => z[1](z[2]))\n    );\n\nconst xFnTableN = (n: number) => (x: TupleConditionalFnTable): Monad =>\n    Maybe.of(x.filter((y: TupleConditionalFnTableRow) => y[0]))\n        .map((y: TupleConditionalFnTable) => y.slice(0, n))\n        .map((y: TupleConditionalFnTable) =>\n            y.map((z: TupleConditionalFnTableRow) => z[1](z[2]))\n        );\n\nconst xTableFirst = (x: TupleConditionalTable): Monad =>\n    Maybe.of(x.find((y: TupleConditionalTableRow) => y[0])).map(\n        (y: TupleConditionalTableRow) => y[1]\n    );\n\nconst xTableLast = (x: TupleConditionalTable): Monad =>\n    Maybe.of(\n        x\n            .slice()\n            .reverse()\n            .find((y: TupleConditionalTableRow) => y[0])\n    ).map((y: TupleConditionalTableRow) => y[1]);\n\nconst xTableAny = (x: TupleConditionalFnTable): Monad =>\n    Maybe.of(x.filter((y: TupleConditionalFnTableRow) => y[0])).map(\n        (y: TupleConditionalFnTable) =>\n            y.map((z: TupleConditionalFnTableRow) => z[1])\n    );\n\nconst xTableN = (n: number) => (x: TupleConditionalFnTable): Monad =>\n    Maybe.of(x.filter((y: TupleConditionalFnTableRow) => y[0]))\n        .map((y: TupleConditionalFnTable) => y.slice(0, n))\n        .map((y: TupleConditionalFnTable) =>\n            y.map((z: TupleConditionalFnTableRow) => z[1])\n        );\n\nconst decide = (t: RunType, x: DecisionTable) => {\n    // decide which strategy to use\n    const condTable = [\n        [x[0].length === 3 && t === 'first', xFnTableFirst],\n        [x[0].length === 3 && t === 'last', xFnTableLast],\n        [x[0].length === 3 && t === 'any', xFnTableAny],\n        [x[0].length === 3 && typeof t === 'number', xFnTableN(t as number)],\n        [t === 'first', xTableFirst],\n        [t === 'last', xTableLast],\n        [t === 'any', xTableAny],\n        [isFinite(t as number), xTableN(t as number)]\n    ];\n\n    const finder = condTable.find((y: ConditionalRow) => y[0]);\n\n    return Maybe.of(finder).fork(\n        (): void => console.error('condition table is broken'),\n        (y: TupleConditionalTableRow): any => y[1](x)\n    );\n};\n\nconst Decision = (x: DecisionTable): DecisionMonad => ({\n    map: (f: Function): DecisionMonad => Decision(f(x)),\n    chain: (f: Function): any => f(x),\n    ap: (y: Monad): Monad => y.map(x),\n    inspect: (): string => `Decision(${x})`,\n    join: (): DecisionTable => x,\n    concat: (o: DecisionMonad): DecisionMonad =>\n        o.chain(\n            (r: DecisionMonad): DecisionMonad =>\n                Decision((x as Array<any>).concat(r)) // @todo should be x as DecisionTable, no?\n        ),\n    head: (): DecisionTable => x[0],\n    tail: (): DecisionTable => x[x.length - 1],\n    isEmpty: (): Boolean => Boolean(x.length === 0),\n    run: (t: RunType = 'first'): any => decide(t, x)\n});\n\nconst decisionTypeError = (x: any): DecisionMonad => {\n    console.error(\n        'Decision must be passed parameters that adhere to the documented type. Value that was passed:',\n        x\n    );\n\n    return Decision([[true, null]]);\n};\n\n// @todo make much stricter; more of a sniff test right now\nconst DecisionOf = (x: DecisionTable): DecisionMonad =>\n    Array.isArray(x) &&\n    Array.isArray(x[0]) &&\n    x[0].length > 1 &&\n    x[0].length < 4\n        ? Decision(x)\n        : decisionTypeError(x);\n\nconst exportDecision: DecisionMonadConstructor = {\n    of: DecisionOf\n};\n\nconst findIfCond = (a: string, x: BoolTable) =>\n    x.find((y: TupleBoolTableRow) => (y[0] === a ? true : false));\n\nconst queryBTFn = (x: BoolTable) => (a: string): Boolean =>\n    Maybe.of(findIfCond(a, x))\n        .map((y: TupleBoolTableRow) => y.slice(-1).pop())\n        .fork(\n            _ => {\n                console.warn('`if` condition not found: ', a);\n                return false;\n            },\n            y => Boolean(y)\n        );\n\nconst BoolTable = (x: BoolTable): BoolTableMonad => ({\n    map: (f: Function): BoolTableMonad => BoolTable(f(x)),\n    chain: (f: Function): any => f(x),\n    ap: (y: Monad): Monad => y.map(x),\n    inspect: (): string => `BoolTable(${x})`,\n    join: (): BoolTable => x,\n    concat: (o: BoolTableMonad): BoolTableMonad =>\n        o.chain(\n            (r: any): BoolTableMonad => BoolTable((x as BoolTable).concat(r))\n        ),\n    head: (): TupleBoolTableRow | Array<void> =>\n        Array.isArray(x) && x.length ? x[0] : [],\n    tail: (): TupleBoolTableRow | Array<void> =>\n        Array.isArray(x) && x.length ? x[x.length - 1] : [],\n    isEmpty: (): Boolean => Boolean(!Array.isArray(x) || x.length === 0),\n    q: queryBTFn(x),\n    query: queryBTFn(x)\n});\n\nconst boolTableTypeError = (x: any): BoolTableMonad => {\n    console.error(\n        'BoolTable must be passed parameters that adhere to the documented type. Value that was passed:',\n        x\n    );\n\n    return BoolTable([['there was a BoolTable type error', true]]);\n};\n\n// @todo make much stricter; more of a sniff test right now\nconst BoolTableOf = (x: BoolTable): BoolTableMonad =>\n    Array.isArray(x) && Array.isArray(x[0]) && x[0].length === 2\n        ? BoolTable(x)\n        : boolTableTypeError(x);\n\nconst exportBoolTable: BoolTableMonadConstructor = {\n    of: BoolTableOf\n};\n\nexport {\n    exportDecision as Decision,\n    exportTruth as Truth,\n    exportBoolTable as BoolTable\n};\n","const Just = x => ({\n    isJust: true,\n    isNothing: false,\n    inspect: _ => `Just(${x})`,\n    map: f => Maybe.of(f(x)),\n    ap: y => y.map(x),\n    chain: f => f(x),\n    join: _ => x,\n    fork: (_, g) => g(x),\n    sequence: of => x.map(Maybe.of)\n});\n\nconst Nothing = _ => ({\n    isJust: false,\n    isNothing: true,\n    inspect: _ => `Nothing`,\n    map: _ => Nothing(),\n    ap: _ => Nothing(),\n    chain: _ => Nothing(),\n    join: _ => Nothing(),\n    fork: (f, _) => f(),\n    sequence: of => of(Nothing())\n});\n\nconst Maybe = {\n    of: x => x === null || x === undefined ? Nothing() : Just(x)\n};\n\nmodule.exports = {Maybe, Nothing, Just};"],"sourceRoot":""}